y = expression(nu[1][j])) +
scale_fill_manual("oi", values = c("firebrick1","green1")) +
theme(panel.background = element_rect("white"),
panel.border = element_rect(NA),
panel.grid = element_line("grey95"),
legend.position = "none")
# Gráfico dos efeitos aleatórios e inclinação por empresa (dividos em 4 gráficos)
plot_original_incl1 <- random.effects(modelo_final_hlm2)%>%
rename(v1j = 2) %>%
rownames_to_column("Empresa") %>%
slice(1:50) %>%
mutate(color_v1j = ifelse(v1j < 0, "A", "B"),
hjust_v1j = ifelse(v1j > 0, 1.15, -0.15)) %>%
arrange(Empresa) %>%
ggplot(aes(label = format(v1j, digits = 2),
hjust = hjust_v1j)) +
geom_bar(aes(x = fct_rev(Empresa), y = v1j, fill = color_v1j),
stat = "identity", color = "black") +
geom_text(aes(x = Empresa, y = 0), size = 4.1, color = "black") +
coord_flip() +
labs(x = "Empresa",
y = expression(nu[1][j])) +
scale_fill_manual("oi", values = c("firebrick1","green1")) +
theme(panel.background = element_rect("white"),
panel.border = element_rect(NA),
panel.grid = element_line("grey95"),
legend.position = "none")
plot_original_incl2 <- random.effects(modelo_final_hlm2)%>%
rename(v1j = 2) %>%
rownames_to_column("Empresa") %>%
slice(51:100) %>%
mutate(color_v1j = ifelse(v1j < 0, "A", "B"),
hjust_v1j = ifelse(v1j > 0, 1.15, -0.15)) %>%
arrange(Empresa) %>%
ggplot(aes(label = format(v1j, digits = 2),
hjust = hjust_v1j)) +
geom_bar(aes(x = fct_rev(Empresa), y = v1j, fill = color_v1j),
stat = "identity", color = "black") +
geom_text(aes(x = Empresa, y = 0), size = 4.1, color = "black") +
coord_flip() +
labs(x = "Empresa",
y = expression(nu[1][j])) +
scale_fill_manual("oi", values = c("firebrick1","green1")) +
theme(panel.background = element_rect("white"),
panel.border = element_rect(NA),
panel.grid = element_line("grey95"),
legend.position = "none")
plot_original_incl3 <- random.effects(modelo_final_hlm2)%>%
rename(v1j = 2) %>%
rownames_to_column("Empresa") %>%
slice(101:150) %>%
mutate(color_v1j = ifelse(v1j < 0, "A", "B"),
hjust_v1j = ifelse(v1j > 0, 1.15, -0.15)) %>%
arrange(Empresa) %>%
ggplot(aes(label = format(v1j, digits = 2),
hjust = hjust_v1j)) +
geom_bar(aes(x = fct_rev(Empresa), y = v1j, fill = color_v1j),
stat = "identity", color = "black") +
geom_text(aes(x = Empresa, y = 0), size = 4.1, color = "black") +
coord_flip() +
labs(x = "Empresa",
y = expression(nu[1][j])) +
scale_fill_manual("oi", values = c("firebrick1","green1")) +
theme(panel.background = element_rect("white"),
panel.border = element_rect(NA),
panel.grid = element_line("grey95"),
legend.position = "none")
plot_original_incl4 <- random.effects(modelo_final_hlm2)%>%
rename(v1j = 2) %>%
rownames_to_column("Empresa") %>%
slice(151:194) %>%
mutate(color_v1j = ifelse(v1j < 0, "A", "B"),
hjust_v1j = ifelse(v1j > 0, 1.15, -0.15)) %>%
arrange(Empresa) %>%
ggplot(aes(label = format(v1j, digits = 2),
hjust = hjust_v1j)) +
geom_bar(aes(x = fct_rev(Empresa), y = v1j, fill = color_v1j),
stat = "identity", color = "black") +
geom_text(aes(x = Empresa, y = 0), size = 4.1, color = "black") +
coord_flip() +
labs(x = "Empresa",
y = expression(nu[1][j])) +
scale_fill_manual("oi", values = c("firebrick1","green1")) +
theme(panel.background = element_rect("white"),
panel.border = element_rect(NA),
panel.grid = element_line("grey95"),
legend.position = "none")
# Dividindo o gráfico em quatro partes
plot_dividido_incl <- plot_grid(plot_original_incl1, plot_original_incl2, plot_original_incl3, plot_original_incl4,
ncol = 2, nrow = 2)
# Exibir o gráfico dividido
plot_dividido_incl
# Encontrar o menor valor dos efeitos de inclinação
random_effects_incl <- random.effects(modelo_final_hlm2)[[2]]
menor_valor_incl <- min(random_effects_incl)
indice_menor_incl <- which.min(random_effects_incl)
# Encontrar o maior valor dos efeitos de itercepto
maior_valor_incl <- max(random_effects_incl)
indice_maior_incl <- which.max(random_effects_incl)
# Imprimir os resultados
print(paste("Menor intercepto:", menor_valor_incl))
print(paste("Empresa:", indice_menor_incl))
print(paste("Maior valor:", maior_valor_incl))
print(paste("Empresa:", indice_maior_incl))
#Gerando os fitted values do modelo HLM2 Final
dados_filtrados$hlm2_fitted <- predict(modelo_final_hlm2,
dados_filtrados)
# Visualizando os fitted values do modelo
predict(modelo_final_hlm2, level = 0:1) %>%
mutate(desempenho = dados_filtrados$ROA,
etjk = resid(modelo_final_hlm2)) %>% #função resid gera os termos etjk
select(empresa_factor, desempenho, everything()) %>%
arrange(empresa_factor) %>%
kable() %>%
kable_styling(bootstrap_options = "striped",
full_width = F,
font_size = 18)
# Visualizando os fitted values do modelo
predict_modelo_hlm2<-predict(modelo_final_hlm2, level = 0:1) %>%
mutate(desempenho = dados_filtrados$ROA,
etjk = resid(modelo_final_hlm2)) %>% #função resid gera os termos etjk
select(empresa_factor, desempenho, everything()) %>%
arrange(empresa_factor) %>%
kable() %>%
kable_styling(bootstrap_options = "striped",
full_width = F,
font_size = 18)
write.xlsx(predict_modelo_hlm2,"C:/Users/User/arq_tcc/RStudio/hlm2_tcc_final/predict_moldelo_hlm2_tc_final.xlsx")
#Valores previstos do desempenho das empresas em função da variável exportaçoes para o
#modelo final HLM2 com interceptos e inclinações aleatórios
dados_filtrados %>%
mutate(fitted_empresa = predict(modelo_final_hlm2, level = 1)) %>%
ggplot() +
geom_point(aes(x = exportacoes, y = fitted_empresa)) +
geom_smooth(aes(x = exportacoes, y = fitted_empresa, color = factor(empresa_factor)),
method = "lm", se = F) +
scale_colour_viridis_d() +
labs(x = "Exportaçoes",
y = "Desempenho da empresa - ROA (Fitted Values)") +
theme_bw()
#Gráfico fitted values X desempenho
valores_ajustados <- fitted(modelo_final_hlm2)
valores_observados <- dados_filtrados$ROA
dados_grafico <- data.frame(ROA = valores_observados, ValoresAjustados = valores_ajustados)
ggplot(dados_grafico, aes(x = ROA, y = ValoresAjustados)) +
geom_point() +  # Adiciona pontos ao gráfico
geom_smooth(method = "lm", se = FALSE, color = "blue") +  # Linha de tendência
theme_minimal() +  # Tema minimalista
labs(x = "ROA", y = "Valores Ajustados",
title = "Gráfico de Valores Ajustados pelo ROA")
# Gráfico dos efeitos aleatórios e inclinação por empresa (dividos em 4 gráficos)
plot_original_incl1 <- random.effects(modelo_final_hlm2)%>%
rename(v1j = 2) %>%
rownames_to_column("Empresa") %>%
slice(1:50) %>%
mutate(color_v1j = ifelse(v1j < 0, "A", "B"),
hjust_v1j = ifelse(v1j > 0, 1.15, -0.15)) %>%
arrange(Empresa) %>%
ggplot(aes(label = format(v1j, digits = 2),
hjust = hjust_v1j)) +
geom_bar(aes(x = fct_rev(Empresa), y = v1j, fill = color_v1j),
stat = "identity", color = "black") +
geom_text(aes(x = Empresa, y = 0), size = 4.1, color = "black") +
coord_flip() +
labs(x = "Empresa",
y = expression(nu[1][j])) +
scale_fill_manual("oi", values = c("firebrick1","green1")) +
theme(panel.background = element_rect("white"),
panel.border = element_rect(NA),
panel.grid = element_line("grey95"),
legend.position = "none")
plot_original_incl2 <- random.effects(modelo_final_hlm2)%>%
rename(v1j = 2) %>%
rownames_to_column("Empresa") %>%
slice(51:100) %>%
mutate(color_v1j = ifelse(v1j < 0, "A", "B"),
hjust_v1j = ifelse(v1j > 0, 1.15, -0.15)) %>%
arrange(Empresa) %>%
ggplot(aes(label = format(v1j, digits = 2),
hjust = hjust_v1j)) +
geom_bar(aes(x = fct_rev(Empresa), y = v1j, fill = color_v1j),
stat = "identity", color = "black") +
geom_text(aes(x = Empresa, y = 0), size = 4.1, color = "black") +
coord_flip() +
labs(x = "Empresa",
y = expression(nu[1][j])) +
scale_fill_manual("oi", values = c("firebrick1","green1")) +
theme(panel.background = element_rect("white"),
panel.border = element_rect(NA),
panel.grid = element_line("grey95"),
legend.position = "none")
plot_original_incl3 <- random.effects(modelo_final_hlm2)%>%
rename(v1j = 2) %>%
rownames_to_column("Empresa") %>%
slice(101:150) %>%
mutate(color_v1j = ifelse(v1j < 0, "A", "B"),
hjust_v1j = ifelse(v1j > 0, 1.15, -0.15)) %>%
arrange(Empresa) %>%
ggplot(aes(label = format(v1j, digits = 2),
hjust = hjust_v1j)) +
geom_bar(aes(x = fct_rev(Empresa), y = v1j, fill = color_v1j),
stat = "identity", color = "black") +
geom_text(aes(x = Empresa, y = 0), size = 4.1, color = "black") +
coord_flip() +
labs(x = "Empresa",
y = expression(nu[1][j])) +
scale_fill_manual("oi", values = c("firebrick1","green1")) +
theme(panel.background = element_rect("white"),
panel.border = element_rect(NA),
panel.grid = element_line("grey95"),
legend.position = "none")
plot_original_incl4 <- random.effects(modelo_final_hlm2)%>%
rename(v1j = 2) %>%
rownames_to_column("Empresa") %>%
slice(151:194) %>%
mutate(color_v1j = ifelse(v1j < 0, "A", "B"),
hjust_v1j = ifelse(v1j > 0, 1.15, -0.15)) %>%
arrange(Empresa) %>%
ggplot(aes(label = format(v1j, digits = 2),
hjust = hjust_v1j)) +
geom_bar(aes(x = fct_rev(Empresa), y = v1j, fill = color_v1j),
stat = "identity", color = "black") +
geom_text(aes(x = Empresa, y = 0), size = 4.1, color = "black") +
coord_flip() +
labs(x = "Empresa",
y = expression(nu[1][j])) +
scale_fill_manual("oi", values = c("firebrick1","green1")) +
theme(panel.background = element_rect("white"),
panel.border = element_rect(NA),
panel.grid = element_line("grey95"),
legend.position = "none")
# Dividindo o gráfico em quatro partes
plot_dividido_incl <- plot_grid(plot_original_incl1, plot_original_incl2, plot_original_incl3, plot_original_incl4,
ncol = 2, nrow = 2)
# Exibir o gráfico dividido
plot_dividido_incl
#Para observarmos graficamente o comportamento dos valores de v0j, ou seja,
#dos interceptos aleatórios por empresa, podemos comandar
random.effects(modelo_final_hlm2) %>%
rename(v0j = 1) %>%
rownames_to_column("Empresa") %>%
mutate(color_v0j = ifelse(v0j < 0, "A", "B"),
hjust_v0j = ifelse(v0j > 0, 1.15, -0.15)) %>%
arrange(Empresa) %>%
ggplot(aes(label = format(v0j, digits = 2),
hjust = hjust_v0j)) +
geom_bar(aes(x = fct_rev(Empresa), y = v0j, fill = color_v0j),
stat = "identity", color = "black") +
geom_text(aes(x = Empresa, y = 0), size = 4.1, color = "black") +
coord_flip() +
labs(x = "Empresa",
y = expression(nu[0][j])) +
scale_fill_manual("oi", values = c("firebrick1","green1")) +
theme(panel.background = element_rect("white"),
panel.border = element_rect(NA),
panel.grid = element_line("grey95"),
legend.position = "none")
random_effects<- random.effects(modelo_final_hlm2)
random_effects
# Gráfico dos efeitos aleatórios por empresa (dividos em 4 gráficos)
plot_original1 <- slice(random_effects, 1:50) %>%
rename(v0j = 1) %>%
rownames_to_column("Empresa") %>%
mutate(color_v0j = ifelse(v0j < 0, "A", "B"),
hjust_v0j = ifelse(v0j > 0, 1.15, -0.15)) %>%
arrange(Empresa) %>%
ggplot(aes(label = format(v0j, digits = 2),
hjust = hjust_v0j)) +
geom_bar(aes(x = fct_rev(Empresa), y = v0j, fill = color_v0j),
stat = "identity", color = "black") +
geom_text(aes(x = Empresa, y = 0), size = 4.1, color = "black") +
coord_flip() +
labs(x = "Empresa",
y = expression(nu[0][j])) +
scale_fill_manual("oi", values = c("firebrick1","green1")) +
theme(panel.background = element_rect("white"),
panel.border = element_rect(NA),
panel.grid = element_line("grey95"),
legend.position = "none")
plot_original2 <- slice(random_effects, 51:100) %>%
rename(v0j = 1) %>%
rownames_to_column("Empresa") %>%
mutate(color_v0j = ifelse(v0j < 0, "A", "B"),
hjust_v0j = ifelse(v0j > 0, 1.15, -0.15)) %>%
arrange(Empresa) %>%
ggplot(aes(label = format(v0j, digits = 2),
hjust = hjust_v0j)) +
geom_bar(aes(x = fct_rev(Empresa), y = v0j, fill = color_v0j),
stat = "identity", color = "black") +
geom_text(aes(x = Empresa, y = 0), size = 4.1, color = "black") +
coord_flip() +
labs(x = "Empresa",
y = expression(nu[0][j])) +
scale_fill_manual("oi", values = c("firebrick1","green1")) +
theme(panel.background = element_rect("white"),
panel.border = element_rect(NA),
panel.grid = element_line("grey95"),
legend.position = "none")
plot_original3 <- slice(random_effects, 101:150) %>%
rename(v0j = 1) %>%
rownames_to_column("Empresa") %>%
mutate(color_v0j = ifelse(v0j < 0, "A", "B"),
hjust_v0j = ifelse(v0j > 0, 1.15, -0.15)) %>%
arrange(Empresa) %>%
ggplot(aes(label = format(v0j, digits = 2),
hjust = hjust_v0j)) +
geom_bar(aes(x = fct_rev(Empresa), y = v0j, fill = color_v0j),
stat = "identity", color = "black") +
geom_text(aes(x = Empresa, y = 0), size = 4.1, color = "black") +
coord_flip() +
labs(x = "Empresa",
y = expression(nu[0][j])) +
scale_fill_manual("oi", values = c("firebrick1","green1")) +
theme(panel.background = element_rect("white"),
panel.border = element_rect(NA),
panel.grid = element_line("grey95"),
legend.position = "none")
plot_original4 <- slice(random_effects, 151:194) %>%
rename(v0j = 1) %>%
rownames_to_column("Empresa") %>%
mutate(color_v0j = ifelse(v0j < 0, "A", "B"),
hjust_v0j = ifelse(v0j > 0, 1.15, -0.15)) %>%
arrange(Empresa) %>%
ggplot(aes(label = format(v0j, digits = 2),
hjust = hjust_v0j)) +
geom_bar(aes(x = fct_rev(Empresa), y = v0j, fill = color_v0j),
stat = "identity", color = "black") +
geom_text(aes(x = Empresa, y = 0), size = 4.1, color = "black") +
coord_flip() +
labs(x = "Empresa",
y = expression(nu[0][j])) +
scale_fill_manual("oi", values = c("firebrick1","green1")) +
theme(panel.background = element_rect("white"),
panel.border = element_rect(NA),
panel.grid = element_line("grey95"),
legend.position = "none")
# Dividindo o gráfico em quatro partes
plot_dividido <- plot_grid(plot_original1, plot_original2, plot_original3, plot_original4,
ncol = 2, nrow = 2)
# Exibir o gráfico dividido
plot_dividido
# Encontrar o menor valor dos efeitos de itercepto
menor_valor <- min(random_effects[, 1])
indice_menor <- which.min(random_effects[, 1])
# Encontrar o maior valor dos efeitos de itercepto
maior_valor <- max(random_effects[, 1])
indice_maior <- which.max(random_effects[, 1])
# Imprimir os resultados
print(paste("Menor intercepto:", menor_valor))
print(paste("Empresa:", indice_menor))
print(paste("Maior valor:", maior_valor))
print(paste("Empresa:", indice_maior))
#Para observarmos graficamente o comportamento dos valores de v1j, ou seja
#das inclinações aleatórias por escola, podemos comandar
random.effects(modelo_final_hlm2)%>%
rename(v1j = 2) %>%
rownames_to_column("Empresa") %>%
mutate(color_v1j = ifelse(v1j < 0, "A", "B"),
hjust_v1j = ifelse(v1j > 0, 1.15, -0.15)) %>%
arrange(Empresa) %>%
ggplot(aes(label = format(v1j, digits = 2),
hjust = hjust_v1j)) +
geom_bar(aes(x = fct_rev(Empresa), y = v1j, fill = color_v1j),
stat = "identity", color = "black") +
geom_text(aes(x = Empresa, y = 0), size = 4.1, color = "black") +
coord_flip() +
labs(x = "Empresa",
y = expression(nu[1][j])) +
scale_fill_manual("oi", values = c("firebrick1","green1")) +
theme(panel.background = element_rect("white"),
panel.border = element_rect(NA),
panel.grid = element_line("grey95"),
legend.position = "none")
# Gráfico dos efeitos aleatórios e inclinação por empresa (dividos em 4 gráficos)
plot_original_incl1 <- random.effects(modelo_final_hlm2)%>%
rename(v1j = 2) %>%
rownames_to_column("Empresa") %>%
slice(1:50) %>%
mutate(color_v1j = ifelse(v1j < 0, "A", "B"),
hjust_v1j = ifelse(v1j > 0, 1.15, -0.15)) %>%
arrange(Empresa) %>%
ggplot(aes(label = format(v1j, digits = 2),
hjust = hjust_v1j)) +
geom_bar(aes(x = fct_rev(Empresa), y = v1j, fill = color_v1j),
stat = "identity", color = "black") +
geom_text(aes(x = Empresa, y = 0), size = 4.1, color = "black") +
coord_flip() +
labs(x = "Empresa",
y = expression(nu[1][j])) +
scale_fill_manual("oi", values = c("firebrick1","green1")) +
theme(panel.background = element_rect("white"),
panel.border = element_rect(NA),
panel.grid = element_line("grey95"),
legend.position = "none")
plot_original_incl2 <- random.effects(modelo_final_hlm2)%>%
rename(v1j = 2) %>%
rownames_to_column("Empresa") %>%
slice(51:100) %>%
mutate(color_v1j = ifelse(v1j < 0, "A", "B"),
hjust_v1j = ifelse(v1j > 0, 1.15, -0.15)) %>%
arrange(Empresa) %>%
ggplot(aes(label = format(v1j, digits = 2),
hjust = hjust_v1j)) +
geom_bar(aes(x = fct_rev(Empresa), y = v1j, fill = color_v1j),
stat = "identity", color = "black") +
geom_text(aes(x = Empresa, y = 0), size = 4.1, color = "black") +
coord_flip() +
labs(x = "Empresa",
y = expression(nu[1][j])) +
scale_fill_manual("oi", values = c("firebrick1","green1")) +
theme(panel.background = element_rect("white"),
panel.border = element_rect(NA),
panel.grid = element_line("grey95"),
legend.position = "none")
plot_original_incl3 <- random.effects(modelo_final_hlm2)%>%
rename(v1j = 2) %>%
rownames_to_column("Empresa") %>%
slice(101:150) %>%
mutate(color_v1j = ifelse(v1j < 0, "A", "B"),
hjust_v1j = ifelse(v1j > 0, 1.15, -0.15)) %>%
arrange(Empresa) %>%
ggplot(aes(label = format(v1j, digits = 2),
hjust = hjust_v1j)) +
geom_bar(aes(x = fct_rev(Empresa), y = v1j, fill = color_v1j),
stat = "identity", color = "black") +
geom_text(aes(x = Empresa, y = 0), size = 4.1, color = "black") +
coord_flip() +
labs(x = "Empresa",
y = expression(nu[1][j])) +
scale_fill_manual("oi", values = c("firebrick1","green1")) +
theme(panel.background = element_rect("white"),
panel.border = element_rect(NA),
panel.grid = element_line("grey95"),
legend.position = "none")
plot_original_incl4 <- random.effects(modelo_final_hlm2)%>%
rename(v1j = 2) %>%
rownames_to_column("Empresa") %>%
slice(151:194) %>%
mutate(color_v1j = ifelse(v1j < 0, "A", "B"),
hjust_v1j = ifelse(v1j > 0, 1.15, -0.15)) %>%
arrange(Empresa) %>%
ggplot(aes(label = format(v1j, digits = 2),
hjust = hjust_v1j)) +
geom_bar(aes(x = fct_rev(Empresa), y = v1j, fill = color_v1j),
stat = "identity", color = "black") +
geom_text(aes(x = Empresa, y = 0), size = 4.1, color = "black") +
coord_flip() +
labs(x = "Empresa",
y = expression(nu[1][j])) +
scale_fill_manual("oi", values = c("firebrick1","green1")) +
theme(panel.background = element_rect("white"),
panel.border = element_rect(NA),
panel.grid = element_line("grey95"),
legend.position = "none")
# Dividindo o gráfico em quatro partes
plot_dividido_incl <- plot_grid(plot_original_incl1, plot_original_incl2, plot_original_incl3, plot_original_incl4,
ncol = 2, nrow = 2)
# Exibir o gráfico dividido
plot_dividido_incl
# Encontrar o menor valor dos efeitos de inclinação
random_effects_incl <- random.effects(modelo_final_hlm2)[[2]]
menor_valor_incl <- min(random_effects_incl)
indice_menor_incl <- which.min(random_effects_incl)
# Encontrar o maior valor dos efeitos de itercepto
maior_valor_incl <- max(random_effects_incl)
indice_maior_incl <- which.max(random_effects_incl)
# Imprimir os resultados
print(paste("Menor intercepto:", menor_valor_incl))
print(paste("Empresa:", indice_menor_incl))
print(paste("Maior valor:", maior_valor_incl))
print(paste("Empresa:", indice_maior_incl))
### Intra Class correlation para o nível empresa: de fato o impacto do nível empresas no desempenho ROA
ICC_empresas<- (1.636609e+02+2.487233e-09)/(1.636609e+02+2.487233e-09+6.143889e+01)
#Parâmetros do modelo
summary(modelo_final_hlm2)
#Erros-padrão por meio da função 'stderr_nlme' desenvolvida
stderr_nlme(modelo_final_hlm2)
ICC_empresas
1-ICC_empresas
#Intervalos de confianças para modelos multiníveis
intervals(modelo_final_hlm2)
#Comparação entre os LLs do modelos
data.frame(OLS_Nulo = logLik(modelo_ols_nulo),
HLM2_Nulo = logLik(modelo_nulo_hlm2),
HLM2_Intercept_Aleat = logLik(modelo_intercept_hlm2),
HLM2_Intercept_Inclin_Aleat = logLik(modelo_intercept_inclin_hlm2),
HLM2_Modelo_Final = logLik(modelo_final_hlm2)) %>%
rename(`OLS Nulo` = 1,
`HLM2 Nulo` = 2,
`HLM2 com Interceptos Aleatórios` = 3,
`HLM2 com Interceptos e Inclinações Aleatórios` = 4,
`HLM2 Modelo Final` = 5) %>%
melt() %>%
ggplot(aes(x = variable, y = (abs(-value)), fill = factor(variable))) +
geom_bar(stat = "identity") +
geom_label(aes(label = (round(value,3))), hjust = 1.1, color = "white", size = 6) +
labs(title = "Comparação do LL",
y = "LogLik",
x = "Modelo Proposto") +
coord_flip() +
scale_fill_manual("Legenda:",
values = c("grey25","grey45","bisque4","bisque3",
"deepskyblue1")) +
theme(legend.title = element_blank(),
panel.background = element_rect("white"),
legend.position = "none",
axis.line = element_line())
#Erros-padrão por meio da função 'stderr_nlme' desenvolvida
stderr_nlme(modelo_intercept_hlm2)
#Comparando os LLs
#Para comparar os LLs dos modelos, vamos utilizar a função lrtest do pacote lmtest
lrtest(modelo_nulo_hlm2, modelo_intercept_inclin_hlm2, modelo_final_hlm2)
